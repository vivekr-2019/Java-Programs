//Method overloading 

import java.util.*;
class Test{

     static int max(int x, int y){
        if(x>y){
            return x;
        }
        else{
            return y;
        }
     }

     static float max(float x, float y){
        if(x>y){
            return x;
        }
        else{
            return y;
        }
     }

     static float max(int x, int y, int z){
        if(x>y && x>z){
            return x;
        }
        if(y>z){
            return y;
        }
        else{
            return z;
        }
     }


     public static void main(String [] args){

        System.out.println(max(10,20));
        System.out.println(max(10.1f,20.1f));
        System.out.println(max(10,20, 30));
     }
} 


//overloaded method to calculate areas
import java.util.*;
class Test{

    static double area(double x, double y){
        double rectangle = x*y; 
        return rectangle;
    }

    static double area(double r){
        double circle = Math.PI* r *r ;
        return circle;
    }

    static double area(double a,double b,double h){
        double trapezium = 0.5 * (a+b) *h;
        return trapezium;
    }

    public static void main(String[] args) {
        System.out.println(area(10.23,20.2)+" area of rectangle");
        System.out.println(area(20)+" area of circle");
        System.out.println(area(10,20,30)+" area of trapezium");
    }
}


//overloaded method to reverse a int or array

import java.util.*;

class Test{


    static int reverse(int x){
        
        int rev =0;
        while(x>0){
            int r = x%10;
            rev = (rev*10)+r;
            x =x/10;
        }
        return rev;
    }

    static int [] reverse(int x[]){

        int y[]= new int [10];
        for(int i=x.length-1, j=0 ;i>=0; i--,j++)
            y[j] = x[i];
            return y;
        
    }

    public static void main(String[] args) {

        int a[] = {8,6,10,9,2,15,7,13,15,11};
        System.out.println(reverse(237));
        System.out.println(Arrays.toString(reverse(a)));
    }
}


//overloaded method to validate name and age

import java.util.*;

class Test{

    static boolean validate(String name){
        boolean n = name.matches("[a-zA-z\\S]*");
        return n;

    }

    static boolean validate(int age){
        boolean a = age >3 && age <15;
        return a;
    }

    public static void main(String [] args){
        System.out.println(validate("vivek r"));
        System.out.println(validate(22));
    }
}
